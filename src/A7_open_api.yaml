openapi: 3.0.0

info:
  version: '1.0'
  title: A7
  description: 'Web resources specification for A7'

servers:
  - url: http://127.0.0.1..8000 
    description: Jammer - Game Jamming Platform

tags:
  - name: 'M01: Authentication'
  - name: 'M02: Events'
  - name: 'M03: User'
  - name: 'M04: Static'

paths:
  /login:
    get:
      operationId: R101
      summary: 'R101: Login Form'
      description: 'Login form : PUB'

      tags:
        - 'M01: Authentication'

      responses:
        '200':
          description: 'OK, Show Log-in UI'
    post:
      operationId: 'R102'
      summary: 'L102: Login Action'
      description: 'Login information processing : PUB'

      tags:
        - 'M01: Authentication'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                    type: string
                    description: The user's email (optional)
                    example: johndoe@example.com
                password:
                  type: string
                  description: The user's password
                  example: password123
              required:
                - email
                - password
      responses:
        '302':
          description: 'Redirect after checking the credentials'
          headers:
            Location:
              schema:
                type: string
                description: Sends to home page
                example:
                  302Success:
                    description:  'OK, Redirect to home page'
                    value: '/home'
                  302Error:
                    description: 'Failed authentication, Redirect to login page'
                    value: '/login'
  
  /logout:
    post:
      operationId: R103
      summary: 'R103: Logout Action'
      description: 'Logout : PUB'

      tags: 
        - 'M01: Authentication'
      responses:
        '302':
          description: 'Redirect after processing Logout'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'OK, Logout successful, Redirect to login page'
                  value: '/login'

  /register:
    get:
      operationId: R104
      summary: 'R104: Register Form'
      description: 'Register form : PUB'

      tags:
        - 'M01: Authentication'
      responses:
        '200':
          description: 'OK, Show Register UI'

    post:
      operationId: R105
      summary: 'R105: Register Action'
      description: 'Register information processing : PUB'

      tags:
        - 'M01: Authentication'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The user's username
                  example: johndoe
                password:
                  type: string
                  description: The user's password
                  example: password123
                email:
                  type: string
                  description: The user's email (optional)
                  example: johndoe@example.com
              required:
                - username
                - password
      responses:
        '302':
          description: 'Redirect after processing new user info'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'OK, Redirect to home page'
                  value: '/home'
  /home:
    get:
      operationId: R201
      summary: 'R201: Home Page'
      description: 'Home page : PUB'

      tags:
        - 'M03: User'
      responses:
        '200':
          description: 'OK, Show Home UI'          

    post: 
      operationId: R210
      summary: 'R210: Join Event'
      description: 'Join Event : Invite Only'

      tags:
        - 'M02: Events'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: The user's id
                  example: 1
                event_id:
                  type: number
                  description: The event's id
                  example: 1
              required:
                - user_id
                - event_id

      responses:
        '302':
          description: 'Redirect after joining an event'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'OK, Redirect to event page'
                  value: '/events/{id}'

  /event/{id}:
    get:
      operationId: R203
      summary: 'R203: Event Page'
      description: 'Event Page : PUB'

      tags:
        - 'M02: Events'
      responses:
        '200':
          description: 'OK, Show Event UI'
    
    post:
      operationId: R210
      summary: 'R210: Join Event'
      description: 'Join Event : Invite Only'

      tags:
        - 'M02: Events'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: The user's id
                  example: 1
                event_id:
                  type: number
                  description: The event's id
                  example: 1
              required:
                - user_id
                - event_id

      responses:
        '200':
          description: 'Redirect after joining an event'
          headers:
            Location:
              schema:
                type: string
              examples:
                200:
                  description: 'Successful request'

  /deleteevents/{id}:
    post:
      operationId: R208
      summary: 'R208: Delete Event'
      description: 'Delete Event : OWN'

      tags:
        - 'M02: Events'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: The event's id
                  example: 2
              required:
                - event_id

      responses:
        '302':
          description: 'Redirect after deleting an event'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'OK, Redirect to home page'
                  value: '/home'

  /editevents/{id}:
    get:
      operationId: R206
      summary: 'R206: Edit Event Page'
      description: 'Edit Event Page : OWN'
      tags:
        - 'M02: Events'
      responses:
        '200':
          description: 'OK, Show Event UI'

    post:
      operationId: R112
      summary: 'R112: Update Event'
      description: 'Update Event : OWN'

      tags:
        - 'M02: Events'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: The event's id
                  example: 2
                description:
                  type: string
                  description: The event's description
                  example: Very cool event
                startdate:
                  type: string
                  description: The event's start date
                  example: 21/11/2023 00:00
                enddate:
                  type: string
                  description: The event's end date
                  example: 29/11/2023 00:00
                privacy:
                  type: array
                  description: The event's privacy
                  example: public
              required:
                - event_id
                - description
                - startdate
                - enddate
                - privacy

      responses:
        '302':
          description: 'Redirect after updating an event'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'OK, Redirect to event page'
                  value: '/event/{id}'
        '400':
          description: 'Failed to update an event'
          headers:
            Location:
              schema:
                type: string
              examples:
                400:
                  description: 'Bad request'

  /createevents:
    post:
      operationId: R111
      summary: 'R111: Create Events'
      description: 'Create a new event'
      tags:
        - 'M03: User'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                startdate:
                  type: string
                  format: date-time
                enddate:
                  type: string
                  format: date-time
                privacy:
                  type: string
                  enum: [public, private, protected]
                description:
                  type: string
      responses:
        '200':
          description: 'OK, Event created'
        '400':
          description: 'Bad Request, Invalid input'

  /profile:
    get:
      operationId: R302
      summary: 'R302: Profile Page'
      description: 'Profile Page : OWN'
    
      tags:
        - 'M03: User'
      
      response:
        '200':
          description: 'OK, Show Profile UI'
        
    post:
      operationId: R305
      summary: 'R305: Delete account'
      description: 'Delete account : OWN'

      tags:
        - 'M03: User'
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: The user's id
                  example: 2
              required:
                - user_id

      response:
        '302':
          description: 'Redirect after deleting account'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'OK, Redirect to login page'
                  value: '/login'

  /editprofile:
    get:
      operationId: R303
      summary: 'R303: Edit Profile Page'
      description: 'Edit Profile Page : OWN'
    
      tags:
        - 'M03: User'
      
      response:
        '200':
          description: 'OK, Show Edit Profile UI'
        
    post:
      operationId: R304
      summary: 'R304: Edit account'
      description: 'Edit account : OWN'

      tags:
        - 'M03: User'
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: The user's id
                  example: 2
                name:
                  type: string
                  description: The user's username
                  example: 'john doe'
                email:
                  type: string
                  description: The user's email
                  example: 'example@example.com'
              required:
                - user_id
                - name
                - email
      response:
        '302':
          description: 'Redirect after altering account'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'OK, Redirect to profile page'
                  value: '/profile'

  /manageparticipants:
    get:
      operationId: R107
      summary: 'R107: Manage Participants'
      description: 'Manage Participants : OWN'

      tags:
        - 'M03: User'
      responses:
        '200':
          description: 'OK, Show Manage Participants UI'
        '401':
          description: 'Unauthorized access, the user is not the owner of the event'
  /invitetoevent/{id}:
    post:
      operationId: R108
      summary: 'R108: Invite user to Event'
      description: 'Invite to Event : OWN'
      tags:
        - 'M03: User'
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
          description: The ID of the event
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: The email to invite
      responses:
        '200':
          description: 'OK, Invitation sent'
        '401':
          description: 'Unauthorized access, the user is not the owner of the event'

  /removeParticipant/{id_participant}:
    post:
      operationId: R109
      summary: 'R109: Remove Participant'
      description: 'Remove Participant from Event'
      tags:
        - 'M03: User'
      parameters:
        - in: path
          name: id_participant
          required: true
          schema:
            type: integer
          description: The ID of the participant
        - in: path
          name: eventid
          required: true
          schema:
            type: integer
          description: The ID of the event
      responses:
        '200':
          description: 'OK, Participant removed'
        '401':
          description: 'Unauthorized access, the user is not the owner of the event'
          
  /search:
    get:
      operationId: R110
      summary: 'R110: Search'
      description: 'Search for a term'
      tags:
        - 'M03: User'
      parameters:
        - in: query
          name: search
          required: false
          schema:
            type: string
          description: The search term
      responses:
        '200':
          description: 'OK, Search results returned'
        '400':
          description: 'Bad Request, Invalid search term'

  /admin:
    get:
      operationId: R111
      summary: 'R111: Admin Page'
      description: 'Admin Page : ADMIN'

      tags:
        - 'M03: User'
      responses:
        '200':
          description: 'OK, Show Admin UI'
        '401':
          description: 'Unauthorized access, the user is not an admin'
  
  /deleteEvent/{id}:
    post:
      operationId: R112
      summary: 'R112: Delete Event'
      description: 'Delete an event'
      tags:
        - 'M03: User'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the event
      responses:
        '200':
          description: 'OK, Event deleted'
        '400':
          description: 'Bad Request, Invalid event ID'
        '401':
          description: 'Unauthorized, User does not have permission to delete this event'

  /deleteUser/{id}:
    post:
      operationId: R113
      summary: 'R113: Ban User'
      description: 'Ban a user'
      tags:
        - 'M03: User'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the user
      responses:
        '200':
          description: 'OK, User banned'
        '400':
          description: 'Bad Request, Invalid user ID'
        '401':
          description: 'Unauthorized, User does not have permission to ban this user'
